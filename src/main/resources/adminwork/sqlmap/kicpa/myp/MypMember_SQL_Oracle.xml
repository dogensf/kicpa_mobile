<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="MypMember">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>

	<select id="MypMemberDAO.selectCpaCanclInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
                	c.CPA_SN
                ,	c.PIN
                ,	c.CPA_ID
                ,	c.CANCL_CL

            FROM CPA c
            WHERE c.CPA_SN = (SELECT MAX(CPA_SN) FROM CPA WHERE PIN = #pin#)
         ]]>

	</select>

	<select id="MypMemberDAO.selectMypCpaMemberRegisterRegFlagInfo" parameterClass="HashMap" resultClass="String">

		<![CDATA[
            SELECT
					cm.CPA_SN
			FROM CPA_MYP cm
			WHERE cm.CPA_SN = (SELECT MAX(CPA_SN) FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG='N')

		]]>
	</select>

	<select id="MypMemberDAO.selectMypCpaMemberRegisterSbscrbMypSnInfo" parameterClass="HashMap" resultClass="String">

		<![CDATA[
            SELECT
					cm.SBSCRB_MYP_SN
			FROM CPA_MYP cm
			WHERE cm.CPA_SN = (SELECT MAX(CPA_SN) FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG='F')

		]]>
	</select>

	<select id="MypMemberDAO.selectCpaAuditPopupSearchList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
					ao.AUDIT_ID
				,   ai.KOR_AUD_NM AS KOR_AUD_NM
				,   occ.CD_NM AS STATUS_CL_NM
				,   ao.AUDIT_CD
				,   ao.AUDIT_CL
				,   ao.REGIST_DE
				,   ao.LAST_UPDT_DE
				,   ao.STATUS_CL
				,   ao.DSRGNZ_DE
				,   ao.OPETR_DE
				,   ao.AUDIT_EMAIL
				,   ao.TAX_AGENCY_NO
				,   ao.TAX_GRP_CL
				,   ao.TAX_GRP_NO
				,   ao.BIZR_NO
				,   ai.BCNC_CD AS BCNC_CD
				,   trim(trim(adr.RD_ADRES)||' '||trim(adr.RD_ADRES_DETAIL)) AS ADRES
				,   aoc.CD_NM
				,   icc.CD_NM
			FROM KIPADM.AUDIT_OFFICE ao,
				 KIPADM.AUDIT_INFO   ai,
				 (SELECT * FROM KIPADM.CMMN_CODE WHERE GRP_CD = 'GA3070') occ,
				 (SELECT * FROM KIPADM.CMMN_CODE WHERE GRP_CD = 'GA3040') icc,
				 (SELECT * FROM KIPADM.CMMN_CODE WHERE GRP_CD = 'GA3050') aoc,
				 (SELECT * FROM KIPADM.ADRES_INFO WHERE ADR_CL = 'OFICE' AND ADR_TRG_CL = 'AUDOFICE') ADR
			WHERE ao.AUDIT_CD = ai.AUDIT_CD
			  AND ao.STATUS_CL = occ.CD
			  AND ai.STATUS_CL = icc.CD
			  AND ao.AUDIT_CL  = aoc.CD(+)
			  AND ao.AUDIT_ID  = ADR_TRG_ID(+)

			  AND ai.AUD_GRP_CL <> 'A3019999'

			  AND ao.STATUS_CL ='A3070010'
			  AND ai.STATUS_CL ='A3040010'

			  AND ao.DEL_YN = 'N'
			  AND ai.DEL_YN = 'N'
		]]>
		<isNotEmpty property="searchKeyword">
			<![CDATA[
        		AND ai.KOR_AUD_NM LIKE CONCAT(concat('%' , #searchKeyword#) , '%')
          ]]>
		</isNotEmpty>
	</select>

	<insert id="MypMemberDAO.mypCpaMemberRegisterAgreeInfoSave" parameterClass="HashMap">

		<selectKey keyProperty="mypCpaSn" resultClass="int">
			SELECT KIPADM.CPA_MYP_SEQ.NEXTVAL FROM dual
		</selectKey>

		<![CDATA[

			MERGE INTO CPA_MYP
                USING DUAL
                ON (PIN = #pin# AND CPA_SN = #cpaSn#)
                WHEN MATCHED THEN
                          UPDATE SET
                          AGREE_INFO1_YN = #agreeInfoYn1#, AGREE_INFO2_YN = #agreeInfoYn2#, KOREAN_NM = #koreanNm#, BRTHDY = #brthdy#,
                          LAST_UPDT_ID = #userId#, LAST_UPDT_DT = SYSTIMESTAMP

                WHEN NOT MATCHED THEN
                          INSERT (CPA_SN, PIN, AGREE_INFO1_YN, AGREE_INFO2_YN, KOREAN_NM, BRTHDY,
        ]]>
		<isNotEmpty property="sbscrbMypSn">
			<![CDATA[
									SBSCRB_MYP_SN, SBSCRB_YN,
								]]>
		</isNotEmpty>
		<![CDATA[
                          		FRST_REGIST_ID, FRST_REGIST_DT, LAST_UPDT_ID, LAST_UPDT_DT)

                          VALUES (#mypCpaSn#, #pin#, #agreeInfoYn1#, #agreeInfoYn2#, #koreanNm#, #brthdy#,
        ]]>
		<isNotEmpty property="sbscrbMypSn">
			<![CDATA[
									#sbscrbMypSn#, #sbscrbYn#,
								]]>
		</isNotEmpty>
		<![CDATA[
		        				#userId#, SYSTIMESTAMP, #userId#, SYSTIMESTAMP)

		]]>
	</insert>

	<update id="MypMemberDAO.mypCpaMemberRegisterAidMberInfoSave" parameterClass="HashMap">

		<![CDATA[

			UPDATE CPA_MYP
            SET
                AID_MBER_FLAG = #aidMberFlag#
            ,   BIZR_NO = #bizrNo#
            ,   LAST_UPDT_ID = #userId#
            ,   LAST_UPDT_DT = SYSTIMESTAMP

            WHERE PIN = #pin#
              AND CPA_SN = #cpaSn#

		]]>
	</update>

	<update id="MypMemberDAO.mypCpaMemberRegisterCpaCareerInfoSave" parameterClass="HashMap">
		<![CDATA[

			UPDATE CPA_MYP
            SET
				REGIST_DE = #registDe#,
				LAST_REGIST_DE = #registDe#,
				MBER_FLAG = #mberFlag#,
				AUDIT_NM = #auditNm#,
				AUDIT_ID = #auditId#,
				AUDIT_OFCPS = #auditOfcps#,
				CLOSED_CL = #closedCl#,
				CLOSED_CL_NM = #closedClNm#,
               	LAST_UPDT_ID = #userId#,
               	LAST_UPDT_DT = SYSTIMESTAMP

            WHERE PIN = #pin#
              AND CPA_SN = #cpaSn#
		]]>

	</update>

	<insert id="MypMemberDAO.mypCpaMemberRegisterNmstOthbcInfoSave" parameterClass="HashMap">

		<![CDATA[

            MERGE INTO CPA_NMST_OTHBC_MYP
                USING DUAL
                ON (PIN = #pin#)
                WHEN MATCHED THEN
                          UPDATE SET
                          OFC_ADRES_YN = #ofcAdresYn#, OFC_NAME_YN = #ofcNameYn#, OFC_TEL_YN = #ofcTelYn#, OFC_FAX_YN = #ofcFaxYn#, EMAIL_YN = #emailYn#
                        , PHOTO_YN = #photoYn#, PSNL_INFO_YN = #psnlInfoYn#, LAST_UPDT_ID = #userId#, LAST_UPDT_DT = SYSTIMESTAMP

                WHEN NOT MATCHED THEN
                          INSERT (PIN, OFC_ADRES_YN, OFC_NAME_YN, OFC_TEL_YN, OFC_FAX_YN, EMAIL_YN, PHOTO_YN, PSNL_INFO_YN,
                                FRST_REGIST_ID, FRST_REGIST_DT, LAST_UPDT_ID, LAST_UPDT_DT)

                          VALUES (#pin# , #ofcAdresYn# , #ofcNameYn# , #ofcTelYn# , #ofcFaxYn# , #emailYn# , #photoYn# , #psnlInfoYn#,
                                #userId# , SYSTIMESTAMP , #userId# , SYSTIMESTAMP)
        ]]>
	</insert>

	<update id="MypMemberDAO.mypCpaMemberRegisterAtchFileIdSave" parameterClass="HashMap">
		<![CDATA[

			UPDATE CPA_MYP
            SET
				PASS_CRTI_FILE_ID = #passCrtiFileId#,
				RSUM_FILE = #rsumFileId#,
				RSUM_FILE_NM = #rsumFileNm#,
				EVENTN = #eventn#,
				APNTC_END_FILE_ID = #apntcEndFileId#,
				ATCH_FILE_ID = #atchFileId#,
				LAST_UPDT_ID = #userId#,
				LAST_UPDT_DT = SYSTIMESTAMP

            WHERE PIN = #pin#
              AND CPA_SN = #cpaSn#
		]]>

	</update>

	<update id="MypMemberDAO.mypCpaMemberRegisterFlagFAtchFileSave" parameterClass="HashMap">
		<![CDATA[

			UPDATE CPA_MYP
            SET
				PASS_CRTI_FILE_ID = #passCrtiFileId#,
				RSUM_FILE = (SELECT RSUM_FILE FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG ='F' AND CPA_SN = (SELECT MAX(CPA_SN) FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG ='F')),
				RSUM_FILE_NM = (SELECT RSUM_FILE_NM FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG ='F' AND CPA_SN = (SELECT MAX(CPA_SN) FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG ='F')),
				EVENTN = (SELECT EVENTN FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG ='F' AND CPA_SN = (SELECT MAX(CPA_SN) FROM CPA_MYP WHERE PIN = #pin# AND REG_FLAG ='F')),
				APNTC_END_FILE_ID = #apntcEndFileId#,
				ATCH_FILE_ID = #atchFileId#,
				LAST_UPDT_ID = #userId#,
				LAST_UPDT_DT = SYSTIMESTAMP

            WHERE PIN = #pin#
              AND CPA_SN = #cpaSn#
		]]>

	</update>

	<select id="MypMemberDAO.selectCpaMemberRegistTrnngSmInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[

			select
				decode(STDR_TM,0,0,tot_accnut_tm)     as temp01,
				case when accnut_tm >decode(STDR_TM,0,0,tot_accnut_tm) then decode(STDR_TM,0,0,tot_accnut_tm) else accnut_tm end                             as temp02,
				greatest(decode(STDR_TM,0,0,tot_accnut_tm)-accnut_tm,0)   as temp03,
				decode(STDR_TM,0,0,tot_morals_tm)     as temp04,
				case when morals_time >decode(STDR_TM,0,0,tot_morals_tm) then decode(STDR_TM,0,0,tot_morals_tm) else morals_time end                           as temp05,
				greatest(decode(STDR_TM,0,0,tot_morals_tm)-morals_time,0)   as temp06,
				greatest(CYFD_ATMPT_TM +STDR_TM - decode(STDR_TM,0,0,tot_accnut_tm) - decode(STDR_TM,0,0,tot_morals_tm),0) as temp07,
				greatest(ctfd_rcogn_tm + RCOGN_TM - ACCNUT_TM - MORALS_TIME +
                  (case when ACCNUT_TM > decode(stdr_tm,0,0,tot_accnut_tm) then ACCNUT_TM-decode(stdr_tm,0,0,tot_accnut_tm) else 0 end) +
                  (case when MORALS_TIME > decode(stdr_tm,0,0,tot_morals_tm) then MORALS_TIME-decode(stdr_tm,0,0,tot_morals_tm) else 0 end),0) as temp08,
				greatest(CYFD_ATMPT_TM +STDR_TM - decode(STDR_TM,0,0,tot_accnut_tm) - decode(STDR_TM,0,0,tot_morals_tm) -
               (ctfd_rcogn_tm + RCOGN_TM - ACCNUT_TM - MORALS_TIME +
                  (case when ACCNUT_TM > decode(stdr_tm,0,0,tot_accnut_tm) then ACCNUT_TM-decode(stdr_tm,0,0,tot_accnut_tm) else 0 end) +
                  (case when MORALS_TIME > decode(stdr_tm,0,0,tot_morals_tm) then MORALS_TIME-decode(stdr_tm,0,0,tot_morals_tm) else 0 end)),0) as temp09,
				cyfd_atmpt_tm+stdr_tm as temp10,
				CTFD_RCOGN_TM+rcogn_tm as temp11,
				atmpt_tm as temp12
			from kipadm.cpa_trnng_sm
			where pin = #pin#
        ]]>
		<isNotEmpty property="trnYear">
			<![CDATA[
				and trn_year = #trnYear#
			]]>
		</isNotEmpty>
		<isEmpty property="trnYear">
			<![CDATA[
				and trn_year = (select max(trn_year) from kipadm.cpa_trnng_sm where pin = #pin#)
			]]>
		</isEmpty>

	</select>

	<select id="MypMemberDAO.selectCpaMemberRegistTrnngSmYearList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            select
            		trn_year
            	,	pin

			from kipadm.cpa_trnng_sm
			where pin = #pin#

			order by trn_year desc
         ]]>

	</select>

	<select id="MypMemberDAO.selectCpaMemberRegNmstOthbcInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
            		PIN
            	,	OFC_ADRES_YN
            	,	OFC_NAME_YN
            	,	OFC_TEL_YN
            	,	OFC_FAX_YN
            	,	EMAIL_YN
            	,	PHOTO_YN
            	,	PSNL_INFO_YN
				,	CASE WHEN OFC_ADRES_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_ADRES_YN_NM
				,	CASE WHEN OFC_NAME_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_NAME_YN_NM
				,	CASE WHEN OFC_TEL_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_TEL_YN_NM
				,	CASE WHEN OFC_FAX_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_FAX_YN_NM
				,	CASE WHEN EMAIL_YN = 'Y' THEN '공개' ELSE '비공개' END AS EMAIL_YN_NM
				,	CASE WHEN PHOTO_YN = 'Y' THEN '공개' ELSE '비공개' END AS PHOTO_YN_NM
				,	CASE WHEN PSNL_INFO_YN = 'Y' THEN '공개' ELSE '비공개' END AS PSNL_INFO_YN_NM

            FROM CPA_NMST_OTHBC
            WHERE PIN = #pin#
         ]]>

	</select>

	<insert id="MypMemberDAO.mypCpaMemberRegisterNmstOthbcInfoUpdate" parameterClass="HashMap">
		<![CDATA[

			MERGE INTO CPA_NMST_OTHBC
                USING DUAL
                ON (PIN = #pin#)
                WHEN MATCHED THEN
                          UPDATE SET
                          OFC_ADRES_YN = #ofcAdresYn#, OFC_NAME_YN = #ofcNameYn#, OFC_TEL_YN = #ofcTelYn#, OFC_FAX_YN = #ofcFaxYn#, EMAIL_YN = #emailYn#
                        , PHOTO_YN = #photoYn#, PSNL_INFO_YN = #psnlInfoYn#, LAST_UPDT_ID = #userId#, LAST_UPDT_DT = SYSTIMESTAMP

                WHEN NOT MATCHED THEN
                          INSERT (PIN, OFC_ADRES_YN, OFC_NAME_YN, OFC_TEL_YN, OFC_FAX_YN, EMAIL_YN, PHOTO_YN, PSNL_INFO_YN,
                                FRST_REGIST_ID, FRST_REGIST_DT, LAST_UPDT_ID, LAST_UPDT_DT)

                          VALUES (#pin# , #ofcAdresYn# , #ofcNameYn# , #ofcTelYn# , #ofcFaxYn# , #emailYn# , #photoYn# , #psnlInfoYn#,
                                #userId# , SYSTIMESTAMP , #userId# , SYSTIMESTAMP)
		]]>

	</insert>

	<insert id="MypMemberDAO.mypCpaMemberRegisterNmstOthbcInfoUpdatePortal" parameterClass="HashMap">
		<![CDATA[

            MERGE INTO portal.int_mb_info_yn@portal
                USING DUAL
                ON (imiy_psl_id = #pin#)
                WHEN MATCHED THEN
                          UPDATE SET
                          imiy_add_yn = #ofcAdresYn#, imiy_off_name_yn = #ofcNameYn#, imiy_tel_yn = #ofcTelYn#, imiy_fax_yn = #ofcFaxYn#, imiy_email_yn = #emailYn#
                        , imiy_picture_yn = #photoYn#, imiy_info_yn = #psnlInfoYn#, imiy_sys_date = sysdate

                WHEN NOT MATCHED THEN
                          INSERT (imiy_psl_id, imiy_add_yn, imiy_off_name_yn, imiy_tel_yn, imiy_fax_yn, imiy_email_yn, imiy_picture_yn, imiy_info_yn,
                                imiy_sys_date)

                          VALUES (#pin# , #ofcAdresYn# , #ofcNameYn# , #ofcTelYn# , #ofcFaxYn# , #emailYn# , #photoYn# , #psnlInfoYn#,
                                sysdate)

        ]]>

	</insert>

	<select id="MypMemberDAO.selectCpaMemberRegistSbscrbMasterInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
            		sm.SBSCRB_SN
            	,	sm.PIN
            	,	sm.GNRL_ENTRNC_AMT
            	,	sm.GNRL_YY_AMT
				,	sm.CMIT_ENTRNC_AMT
				,	sm.ASSTN_ENTRNC_AMT
            	,	sm.ASSTN_YY_AMT
            	,   to_number(sm.GNRL_ENTRNC_AMT)+to_number(sm.GNRL_YY_AMT)+to_number(sm.CMIT_ENTRNC_AMT)+to_number(sm.ASSTN_ENTRNC_AMT)+to_number(sm.ASSTN_YY_AMT) AS TOT_AMT

            FROM SBSCRB_MASTER sm
            WHERE sm.SBSCRB_SN = (SELECT MAX(SBSCRB_SN) FROM SBSCRB_MASTER WHERE PIN = #pin# AND PAY_STATUS IN ('I', 'W'))
        ]]>

	</select>

	<update id="MypMemberDAO.cpaMemberRegistSbscrbMasterFlagSave" parameterClass="HashMap">
		<![CDATA[

			UPDATE CPA_MYP
            SET
                SBSCRB_MYP_SN = #sbscrbSn#
            ,   SBSCRB_YN = #sbscrbYn#
            ,   LAST_UPDT_ID = #userId#
            ,   LAST_UPDT_DT = SYSTIMESTAMP

            WHERE CPA_SN =#cpaSn#
              AND PIN = #pin#
		]]>

	</update>

	<select id="MypMemberDAO.selectCpaMemberRegistNmstOthbcInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
            		PIN
            	,	OFC_ADRES_YN
				,	OFC_NAME_YN
				,	OFC_TEL_YN
				,	OFC_FAX_YN
				,	EMAIL_YN
				,	PHOTO_YN
				,	PSNL_INFO_YN
				,	CASE WHEN OFC_ADRES_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_ADRES_YN_NM
				,	CASE WHEN OFC_NAME_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_NAME_YN_NM
				,	CASE WHEN OFC_TEL_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_TEL_YN_NM
				,	CASE WHEN OFC_FAX_YN = 'Y' THEN '공개' ELSE '비공개' END AS OFC_FAX_YN_NM
				,	CASE WHEN EMAIL_YN = 'Y' THEN '공개' ELSE '비공개' END AS EMAIL_YN_NM
				,	CASE WHEN PHOTO_YN = 'Y' THEN '공개' ELSE '비공개' END AS PHOTO_YN_NM
				,	CASE WHEN PSNL_INFO_YN = 'Y' THEN '공개' ELSE '비공개' END AS PSNL_INFO_YN_NM

            FROM CPA_NMST_OTHBC_MYP
            WHERE PIN = #pin#
         ]]>

	</select>

	<select id="MypMemberDAO.selectCpaMemberRegAidDuesInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
            		sm.SBSCRB_SN
            	,	sm.PIN
            	,	sm.GNRL_ENTRNC_AMT
            	,	sm.GNRL_YY_AMT
				,	sm.CMIT_ENTRNC_AMT
				,	sm.ASSTN_ENTRNC_AMT
            	,	sm.ASSTN_YY_AMT
            	,   to_number(sm.GNRL_ENTRNC_AMT)+to_number(sm.GNRL_YY_AMT)+to_number(sm.CMIT_ENTRNC_AMT)+to_number(sm.ASSTN_ENTRNC_AMT)+to_number(sm.ASSTN_YY_AMT) AS TOT_AMT

            FROM SBSCRB_MASTER sm
            WHERE sm.SBSCRB_SN = #sbscrbMypSn#
              AND sm.PIN = #pin#
         ]]>

	</select>

	<select id="MypMemberDAO.selectCpaMemberSbscrbMasterInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[

            SELECT
            		sm.SBSCRB_SN
            	,	sm.PIN
            	,	sm.GNRL_ENTRNC_AMT
            	,	sm.GNRL_YY_AMT
				,	sm.CMIT_ENTRNC_AMT
				,	sm.ASSTN_ENTRNC_AMT
            	,	sm.ASSTN_YY_AMT
            	,   to_number(sm.GNRL_ENTRNC_AMT)+to_number(sm.GNRL_YY_AMT)+to_number(sm.CMIT_ENTRNC_AMT)+to_number(sm.ASSTN_ENTRNC_AMT)+to_number(sm.ASSTN_YY_AMT) AS TOT_AMT
            	,   sm.ACCNUT_DE

            FROM SBSCRB_MASTER sm
            WHERE sm.SBSCRB_SN = (SELECT MAX(SBSCRB_SN) FROM SBSCRB_MASTER WHERE PIN = #pin# AND PAY_STATUS IN ('I', 'W'))
              AND sm.PAY_DE BETWEEN TRUNC(ADD_MONTHS(sysdate,-2)+1) - TO_CHAR(sysdate,'DD') AND TRUNC(LAST_DAY(sysdate)) +0.99999421

        ]]>
	</select>

	<update id="MypMemberDAO.mypCpaMemberRegisterRegFlagSave" parameterClass="HashMap">
		<![CDATA[

			UPDATE CPA_MYP
            SET
       			REG_FLAG = #regFlag#,
       			OPETR_DE = #opetrDe#,

       	]]>

		<isNotEmpty property="sbscrbMypSn">
			<![CDATA[
					SBSCRB_MYP_SN = #sbscrbMypSn#,
					SBSCRB_YN = #sbscrbYn#,
			]]>
		</isNotEmpty>

		<![CDATA[

               	LAST_UPDT_ID = #userId#,
               	LAST_UPDT_DT = SYSTIMESTAMP

            WHERE PIN = #pin#
              AND CPA_SN = #cpaSn#
		]]>

	</update>

	<select id="MypMemberDAO.selectMemSendMessageInfoList" parameterClass="HashMap" resultClass="EgovMap">

		<![CDATA[
            SELECT
                    mt.TMPLAT_SN
                ,   mt.MSG_CL
                ,   mt.MSG_TYPE
                ,   mt.SEND_PHONE
                ,   mt.SEND_NAME
                ,   mt.MSG_BODY
                ,   mt.TEMPLATE_CODE
                ,   mt.TIMEOUT
                ,   mt.RE_TYPE
                ,   mt.RE_BODY
                ,   mt.USE_YN
                ,   (SELECT case when LENGTH(KOREAN_NM) > 2 then substr(KOREAN_NM,1,1) || lpad('*',length(KOREAN_NM)-2,'*') || substr(KOREAN_NM, length(KOREAN_NM), 1) else SUBSTR(KOREAN_NM, 1, 1) || LPAD('*', 1, '*') end FROM MBER_INDVDLINFO WHERE PIN = #pin#) AS DEST_NAME
                ,   (SELECT MOBL_PHON_NO FROM MBER_INDVDLINFO WHERE PIN = #pin#) AS DEST_PHONE
                ,   (SELECT cc.OPTN1 FROM CMMN_CODE cc WHERE cc.GRP_CD = 'GN0021'AND cc.USE_YN = 'Y' AND cc.CD = mt.MSG_CL) AS BIZ_CLS
        		,   (SELECT TO_CHAR(TO_DATE(PAY_DE,'YYYYMMDD'), 'YYYY"년 "MM"월 "DD"일"') FROM GIRO_NTIC WHERE ORG_TRAN_ID = #orgTranId#) AS PAY_DE
        		,   (SELECT REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(DUDT_IN_AMT)), '([0-9]{3})','\1,')), '^,','') FROM GIRO_NTIC WHERE ORG_TRAN_ID = #orgTranId#) AS DUDT_IN_AMT

            FROM MESSAGE_TMPLAT mt

            WHERE mt.MSG_CL = #msgCl#
              AND mt.USE_YN = 'Y'
        ]]>

	</select>

	<insert id="MypMemberDAO.cpaMemMessageSend" parameterClass="HashMap">
		<![CDATA[

			INSERT INTO sendbill.biz_msg (
                    MSG_TYPE
                ,   CMID
                ,   REQUEST_TIME
                ,   SEND_TIME
                ,   DEST_PHONE
                ,   SEND_PHONE
                ,   MSG_BODY
                ,   TEMPLATE_CODE
                ,   TIMEOUT
                ,   RE_TYPE
                ,   RE_BODY
                ,   SENDER_KEY
                ,   NATION_CODE
                ,   KICPA_USR
            )
            VALUES (
                    #msgType#
                ,   NVL(#bizCls#,'COMMON')||'_'||TO_CHAR(SYSDATE,'YYYYMMDD')||'_'||LPAD(KIPADM.MESSAGE_SEQ.NEXTVAL,10,'0')
                ,   SYSDATE
                ,   SYSDATE
                ,   #destPhone#
                ,   #sendPhone#
                ,   #msgBody#
                ,   #templateCode#
                ,   #timeout#
                ,   #reType#
                ,   #reBody#
                ,   '97bbacdec7a6e43bfc7969c34194a85dbc867cdf'
                ,   #nationCode#
                ,   #userId#
            )
		]]>

	</insert>

</sqlMap>